@using Weboku.UserInterface.Providers
@using Weboku.Application.Enums
@using Weboku.Application
@inject DomainFacade ModalProvider
@inject ILanguageContainerService LanguageContainer
<ModalTemplateComponent>
    <h1 class="modal__title with-hr">@LanguageContainer.Keys["main-menu__header"]</h1>

    <div class="modal__content">
        <ModalButtonComponent Action="() => ModalProvider.SetModalState(ModalState.NewGame)">@LanguageContainer.Keys["main-menu__new-game"]</ModalButtonComponent>
        <ModalButtonComponent Action="() => ModalProvider.SetModalState(ModalState.HowToPlay)">@LanguageContainer.Keys["main-menu__how-to-play"]</ModalButtonComponent>
        <ModalButtonComponent Action="() => ModalProvider.SetModalState(ModalState.Share)">@LanguageContainer.Keys["main-menu__share"]</ModalButtonComponent>
        <ModalButtonComponent Action="() => ModalProvider.SetModalState(ModalState.Paste)">@LanguageContainer.Keys["main-menu__paste"]</ModalButtonComponent>
        <ModalButtonComponent Action="() => ModalProvider.SetModalState(ModalState.Settings)">@LanguageContainer.Keys["main-menu__settings"]</ModalButtonComponent>
    </div>

    <div class="modal__footer with-hr">
        @if( ModalProvider.HasPreviousState )
        {
            <ModalButtonComponent Action="() => ModalProvider.SetModalState(ModalState.None)" IsSecondary="true">@LanguageContainer.Keys["modal__close"]</ModalButtonComponent>
        }
    </div>
</ModalTemplateComponent>

@code {

}