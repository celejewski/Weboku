@using Weboku.UserInterface.Providers
@using Weboku.Application.Enums
@using Weboku.Application
@inject DomainFacade ModalProvider

    <div class="modal-container"
         style="@_style">
        @if( ModalProvider.CurrentModalState == ModalState.NewGame )
        {
            <NewGameModalComponent />
        }
        else if( ModalProvider.CurrentModalState == ModalState.EndGame )
        {
            <EndGameModalComponent />
        }
        else if( ModalProvider.CurrentModalState == ModalState.HowToPlay )
        {
            <HowToPlayModalComponent />
        }
        else if( ModalProvider.CurrentModalState == ModalState.MainMenu )
        {
            <MainMenuModalComponent />
        }
        else if( ModalProvider.CurrentModalState == ModalState.Share )
        {
            <ShareModalComponent />
        }
        else if( ModalProvider.CurrentModalState == ModalState.Paste )
        {
            <PasteModalComponent />
        }
        else if (ModalProvider.CurrentModalState == ModalState.Hints)
        {
            <HintsModalComponent />
        }
        else if (ModalProvider.CurrentModalState == ModalState.Settings)
        {
            <SettingsModalComponent />
        }
        else if (ModalProvider.CurrentModalState == ModalState.Loading)
        {
            <LoadingModalComponent />
        }
    </div>

@code {
    private string _style
    {
        get
        {
            return ModalProvider.CurrentModalState == ModalState.None
                || ModalProvider.CurrentModalState == ModalState.CustomSudoku
                ? "display: none;"
                : string.Empty;
        }
    }

    protected override void OnInitialized()
    {
        ModalProvider.OnModalStateChanged += StateHasChanged;
    }
}