@using Weboku.UserInterface.Providers
@using Weboku.UserInterface.Commands
@using Weboku.Application.Enums
@using Weboku.Application
@inject ILanguageContainerService Loc
@inject DomainFacade DomainFacade
@inject DomainFacade ModalProvider
@inject DomainFacade SettingsProvider
<div class="menu">
    <div class="menu__item">
        @if (ModalProvider.CurrentModalState == ModalState.CustomSudoku)
        {
            <MenuLinkComponent Action="() => DomainFacade.StartNewCustomGame()">Start game</MenuLinkComponent>
        }
        else
        {
            <DropdownMenuComponent>
                <Header>
                    <MenuLabelComponent>@Loc.Keys["menu__menu-header"]</MenuLabelComponent>
                </Header>
                <Content>
                    <MenuLinkComponent Action="() => ModalProvider.SetModalState(ModalState.MainMenu)">@Loc.Keys["menu__main-menu"]</MenuLinkComponent>
                    <MenuLinkComponent Action="() => ModalProvider.SetModalState(ModalState.Share)">@Loc.Keys["menu__share"]</MenuLinkComponent>
                    <MenuLinkComponent Action="DomainFacade.RestartGame">@Loc.Keys["menu__restart-game"]</MenuLinkComponent>
                    <MenuLinkComponent Action="() => ModalProvider.SetModalState(ModalState.HowToPlay)">@Loc.Keys["menu__how-to-play"]</MenuLinkComponent>
                    <MenuLinkComponent Action="DomainFacade.ShowHintModal">@Loc.Keys["menu__show-hint"]</MenuLinkComponent>
                </Content>
            </DropdownMenuComponent>
        }
    </div>
    <div class="menu__item">
        <TooltipTogglerComponent/>
    </div>
    <div class="menu__item">
        @if (ModalProvider.CurrentModalState == ModalState.CustomSudoku)
        {
            <MenuLinkComponent Action="() => ModalProvider.SetModalState(ModalState.None)">Close</MenuLinkComponent>
        }
        else
        {
            <DropdownMenuComponent>
                <Header>
                    <MenuLabelComponent>@Loc.Keys["menu__candidates-header"]</MenuLabelComponent>
                </Header>
                <Content>
                    <MenuLinkComponent Action="DomainFacade.FillAllLegalCandidates">@Loc.Keys["menu__find-all"]</MenuLinkComponent>
                    <MenuLinkComponent Action="DomainFacade.ClearAllCandidates">@Loc.Keys["menu__remove-all"]</MenuLinkComponent>
                </Content>
            </DropdownMenuComponent>
        }
    </div>
</div>

@code {

    protected override void OnInitialized()
    {
        SettingsProvider.OnLanguageChanged += StateHasChanged;
        ModalProvider.OnModalStateChanged += StateHasChanged;
        base.OnInitialized();
    }

}