@inject FilterProvider FilterProvider
@inject ISudokuProvider SudokuProvider
@inject IGridProvider GridProvider
@using UI.BlazorWASM.Converters;
@using UI.BlazorWASM.Enums;

<div class="filter__cell
            @_currentClass"></div>

@code {
    private string _currentClass => FilterOptionToCssConverter.ToCssClass(_currentFilterOption);
    private FilterOption _previousFilterOption;
    private FilterOption _currentFilterOption => FilterProvider.Filter.IsFiltered(GridProvider, X, Y);

    [Parameter]
    public int X { get; set; }

    [Parameter]
    public int Y { get; set; }

    protected override bool ShouldRender()
    {
        return _previousFilterOption != _currentFilterOption;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        _previousFilterOption = _currentFilterOption;
    }

    protected override void OnInitialized()
    {
        FilterProvider.OnChanged += StateHasChanged;
        SudokuProvider.OnValueOrCandidatesChanged += StateHasChanged;
    }


}
