@inject DomainFacade DomainFacade
@using Application.Filters;
@using Weboku.UserInterface.Converters

<div class="filter__cell
            @_currentClass"></div>

@code {
    private string _currentClass => FilterOptionToCssConverter.ToCssClass(_currentFilterOption);
    private FilterOption _previousFilterOption;
    private FilterOption _currentFilterOption => DomainFacade.Filter.IsFiltered(DomainFacade, Pos);

    [Parameter]
    public Position Pos { get; set; }

    protected override bool ShouldRender()
    {
        return _previousFilterOption != _currentFilterOption;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        _previousFilterOption = _currentFilterOption;
    }

    protected override void OnInitialized()
    {
        DomainFacade.OnFilterChanged += StateHasChanged;
        DomainFacade.OnGridChanged += StateHasChanged;
    }


}
