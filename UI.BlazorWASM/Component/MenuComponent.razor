@inject IJSRuntime JSRuntime
@inject HodokuGridConverter HodokuGridConverter

<div class="menu">
    <a @onclick="FillAllCandidates">Find candidates</a>
    <div class="dropdown">
        <button class="dropbtn">Copy</button>

        <div class="dropdown-content">
            <a @onclick="CopyGivens">Givens</a>
            <a @onclick="CopyInput">User inputs</a>
        </div>
    </div>

    <div class="dropdown">
        <button class="dropbtn">New game</button>
        <div class="dropdown-content">
            <a @onclick="@(() => StartNewGame("Easy"))">Easy</a>
            <a @onclick="@(() => StartNewGame("Medium"))">Medium</a>
            <a @onclick="@(() => StartNewGame("Hard"))">Hard</a>
            <a @onclick="@(() => StartNewGame("Unfair"))">Unfair</a>
            <a @onclick="@(() => StartNewGame("Extreme"))">Extreme</a>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public IGrid Grid { get; set; }

    [Parameter]
    public Func<string, Task> StartNewGame { get; set; }

    [Parameter]
    public Action FillAllCandidates { get; set; }

    private async Task CopyInput() => await Copy(HodokuGridConverter.ToText(Grid, IncludedFields.Inputs));
    private async Task CopyGivens() => await Copy(HodokuGridConverter.ToText(Grid, IncludedFields.Givens));

    private async Task Copy(string text)
    {
        await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", text);
    }
}