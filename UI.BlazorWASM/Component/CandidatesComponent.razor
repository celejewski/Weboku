@inject IGridProvider GridProvider

<div class="candidates">
    @if( _isVisible )
    {
        @_text
    }
</div>
@code {
    [Parameter]
    public int X { get; set; }
    [Parameter]
    public int Y { get; set; }
    [Parameter]
    public int Z { get; set; }

    private int _value;
    private string _text;
    private bool _isVisible { get => GridProvider.HasCandidate(X, Y, (InputValue) _value); }
    private bool _wasVisible;

    protected override void OnInitialized()
    {
        _value = Z + 1;
        _text = _value.ToString();
        GridProvider.OnCandidatesChanged += StateHasChanged;
    }

    protected override bool ShouldRender()
    {
        return _wasVisible != _isVisible;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        _wasVisible = _isVisible;
    }
}
