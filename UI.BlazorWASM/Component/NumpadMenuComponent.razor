@inject NumpadMenuBuilder NumpadMenuBuilder
@inject ISudokuProvider SudokuProvider

    <div class="numpad">
        @foreach( var item in _menuLabels )
        {
            var bound = item;
            <div @onclick="@((e) => OnClick(bound))"
                 class="
                 @(bound == selected ? "HighlightedNumpad" : "") 
                 @(@bound.IsDimmed ? "numpad-dimmed-label" : "")
                 ">
                @item.Label
            </div>
        }
        
        @foreach( var item in _selectColorMenuItems )
        {
            var bound = item;
            <div @onclick="@((e) => OnClick(bound))"
                 class="cell-color @item.CssClass">
                &nbsp;
            </div>
        }
    </div>

@code {

    private IList<INumpadMenuLabel> _menuLabels;
    private IList<ISelectColorMenuItem> _selectColorMenuItems;

    private INumpadMenuItem selected;
    private void OnClick(INumpadMenuItem clicked)
    {
        if( clicked.IsSelectable )
        {
            selected = clicked;
        }
        clicked.Execute();
    }

    protected override void OnInitialized()
    {
        SudokuProvider.OnChanged += StateHasChanged;

        _menuLabels = new INumpadMenuLabel[]
{
            NumpadMenuBuilder.Undo(),
            NumpadMenuBuilder.SelectValue(1),
            NumpadMenuBuilder.SelectValue(2),
            NumpadMenuBuilder.SelectValue(3),

            NumpadMenuBuilder.Redo(),
            NumpadMenuBuilder.SelectValue(4),
            NumpadMenuBuilder.SelectValue(5),
            NumpadMenuBuilder.SelectValue(6),

            NumpadMenuBuilder.SelectValue(0),
            NumpadMenuBuilder.SelectValue(7),
            NumpadMenuBuilder.SelectValue(8),
            NumpadMenuBuilder.SelectValue(9),

            NumpadMenuBuilder.Pairs(),
            NumpadMenuBuilder.PlaceHolder(),
            NumpadMenuBuilder.PlaceHolder(),
            NumpadMenuBuilder.ClearColors()
};

        _selectColorMenuItems = new ISelectColorMenuItem[]
        {
            NumpadMenuBuilder.SelectColor(Enums.CellColor.First),
            NumpadMenuBuilder.SelectColor(Enums.CellColor.Second),
            NumpadMenuBuilder.SelectColor(Enums.CellColor.Third),
            NumpadMenuBuilder.SelectColor(Enums.CellColor.Fourth),
        };


        selected = _menuLabels[1];
    }

}
