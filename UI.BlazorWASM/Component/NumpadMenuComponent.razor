@inject NumpadMenuBuilder NumpadMenuBuilder

<div class="numpad">
    @foreach( var item in _menuItems )
    {
        var bound = item;
        <div @onclick="@((e) => OnClick(bound))"
             class="@(bound == selected ? "HighlightedNumpad" : "")">
            @item.Label
        </div>
    }
</div>

@code {

    private IList<INumpadMenuItem> _menuItems;

    private INumpadMenuItem selected;
    private void OnClick(INumpadMenuItem clicked)
    {
        if( clicked.IsSelectable )
        {
            selected = clicked;
        }
        clicked.Execute();
    }

    protected override void OnInitialized()
    {
        _menuItems = new INumpadMenuItem[]
        {
            NumpadMenuBuilder.Undo(),
            NumpadMenuBuilder.SelectValue(1),
            NumpadMenuBuilder.SelectValue(2),
            NumpadMenuBuilder.SelectValue(3),

            NumpadMenuBuilder.Redo(),
            NumpadMenuBuilder.SelectValue(4),
            NumpadMenuBuilder.SelectValue(5),
            NumpadMenuBuilder.SelectValue(6),

            NumpadMenuBuilder.SelectValue(0),
            NumpadMenuBuilder.SelectValue(7),
            NumpadMenuBuilder.SelectValue(8),
            NumpadMenuBuilder.SelectValue(9),

            NumpadMenuBuilder.Pairs()
        };

        selected = _menuItems[1];
    }
}
