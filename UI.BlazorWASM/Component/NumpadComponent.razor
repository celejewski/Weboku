<div class="numpad">
    @foreach( var guwno in _guwna )
    {
        <div onclick="@guwno.OnClick">
            @guwno.Label
        </div>
    }
</div>

@code {
    [Parameter]
    public int SelectedValue { get; set; }

    [Parameter]
    public EventCallback<int> SelectedValueChanged { get; set; }

    [Parameter]
    public EventCallback OnClickRedo { get; set; }

    [Parameter]
    public EventCallback OnClickUndo { get; set; }

    [Parameter]
    public EventCallback OnClickPairFilter { get; set; }

    [Parameter]
    public EventCallback OnClickSelectedValue { get; set; }

    [Parameter]
    public IClickableAction ClickableAction { get; set; }

    [Parameter]
    public EventCallback<IClickableAction> ClickableActionChanged { get; set; }

    [Parameter]
    public StandardAction StandardAction { get; set; }

    [Parameter]
    public IFilter Filter { get; set; }

    [Parameter]
    public EventCallback<IFilter> FilterChanged { get; set; }

    private Guwno[] _guwna { get; set; }
    protected override void OnInitialized()
    {
        Func<int, Guwno> standardActionFactory = value => new Guwno
        {
            Label = value.ToString(),
            OnClick = async () =>
            {
                await ClickableActionChanged.InvokeAsync(StandardAction);
                StandardAction.SelectedValue = value;
                await FilterChanged.InvokeAsync(new SelectedValueFilter(value));
            }
        };

        _guwna = new Guwno[] {
            new Guwno{Label = "Undo", OnClick = async () => await OnClickUndo.InvokeAsync("") },
            standardActionFactory(1),
            standardActionFactory(2),
            standardActionFactory(3),
            new Guwno{Label = "Redo", OnClick = async () => await OnClickRedo.InvokeAsync("") },
            standardActionFactory(4),
            standardActionFactory(5),
            standardActionFactory(6),
            standardActionFactory(0),
            standardActionFactory(7),
            standardActionFactory(8),
            standardActionFactory(9),
            new Guwno{Label = "Pairs", OnClick = async () =>
                {
                    await FilterChanged.InvokeAsync(new PairFilter());
                }
            },
        };
    }

    class Guwno
    {
        public string Label { get; set; }
        public Action OnClick { get; set; }
    }
}

