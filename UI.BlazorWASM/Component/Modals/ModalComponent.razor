@inject ModalProvider ModalProvider

    <div class="modal-container"
         style="@_style">
        @if( ModalProvider.CurrentState == ModalState.NewGame )
        {
            <NewGameModalComponent />
        }
        else if( ModalProvider.CurrentState == ModalState.EndGame )
        {
            <EndGameModalComponent />
        }
        else if( ModalProvider.CurrentState == ModalState.HowToPlay )
        {
            <HowToPlayModalComponent />
        }
        else if( ModalProvider.CurrentState == ModalState.MainMenu )
        {
            <MainMenuModalComponent />
        }
        else if( ModalProvider.CurrentState == ModalState.Share )
        {
            <ShareModalComponent />
        }
        else if( ModalProvider.CurrentState == ModalState.Paste )
        {
            <PasteModalComponent />
        }
        else if (ModalProvider.CurrentState == ModalState.Hints)
        {
            <HintsModalComponent />
        }
    </div>

@code {
    private string _style { get => ModalProvider.CurrentState == ModalState.None ? "display: none;" : string.Empty; }

    protected override void OnInitialized()
    {
        ModalProvider.OnChanged += StateHasChanged;
    }
}