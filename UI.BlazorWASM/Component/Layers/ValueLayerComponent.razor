@inject Core.DomainFacade DomainFacade
@inject ShareProvider ShareProvider
@inject InputMarkProvider InputMarkProvider

<Grid9x9Component>
    <ValueComponent IsGiven="DomainFacade.IsGiven(context)"
                    Value="GetValue(context)"
                    MarkColor="InputMarkProvider.GetColor(context)" />
</Grid9x9Component>


@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
        DomainFacade.OnValueChanged += StateHasChanged;
        ShareProvider.OnChanged += StateHasChanged;
        InputMarkProvider.OnChanged += StateHasChanged;
    }

    private Value GetValue(Position position)
    {

        if( ShareProvider.IsOpened
            && ShareProvider.SharedFields == Enums.SharedFields.Givens
            && !DomainFacade.IsGiven(position) )
        {
            return Value.None;
        }
        return DomainFacade.GetValue(position);
    }
}