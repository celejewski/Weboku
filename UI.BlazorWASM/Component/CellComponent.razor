@inject Core.DomainFacade DomainFacade

<div class="input @(_currentIsGiven ? "input--is-given " : String.Empty)">
    @(_currentValue != Value.None ? _currentValue.ToString() : string.Empty)
</div>

@code {
    private Value _previousValue;
    private Value _currentValue => DomainFacade.GetValue(Pos);
    private bool _previousIsGiven;
    private bool _currentIsGiven => DomainFacade.IsGiven(Pos);

    [Parameter]
    public Position Pos { get; set; }

    protected override void OnInitialized()
    {
        DomainFacade.OnValueChanged += StateHasChanged;
    }

    protected override bool ShouldRender()
    {
        return _previousValue != _currentValue
            || _previousIsGiven != _currentIsGiven;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        _previousIsGiven = _currentIsGiven;
        _previousValue = _currentValue;
    }
}
