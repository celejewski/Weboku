@inject IGridProvider GridProvider
@inject MarkInputProvider MarkInputProvider
@using UI.BlazorWASM.Converters
 
<div class="mark__cell @GetCurrentClass()"></div>

@code {
    private bool _previousIsLegal;
    private bool _currentIsLegal => GridProvider.IsValueLegal(Pos);
    private bool _isDirty = false;

    private string GetCurrentClass()
    {
        return _currentIsLegal 
            ? CellColorConverter.ToCssClass(MarkInputProvider.GetColor(Pos))
            : "mark__cell--danger";
    }

    [Parameter]
    public Position Pos { get; set; }

    protected override void OnInitialized()
    {
        GridProvider.OnValueChanged += StateHasChanged;
        MarkInputProvider.OnChanged += () =>
        {
            _isDirty = true;
            StateHasChanged();
        };
    }

    protected override bool ShouldRender()
    {
        return _isDirty
            || _previousIsLegal != _currentIsLegal;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        _previousIsLegal = _currentIsLegal;
    }
}
