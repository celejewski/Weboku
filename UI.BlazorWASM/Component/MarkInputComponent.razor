@inject ISudokuProvider SudokuProvider

<div class="@_currentClass"></div>

@code {
    private string _previousClass;
    private string _currentClass;

    [Parameter]
    public int X { get; set; }

    [Parameter]
    public int Y { get; set; }

    protected override void OnInitialized()
    {
        SudokuProvider.OnValueChanged += Update;
    }

    private void Update()
    {
        ICell cell = SudokuProvider.Cells[X, Y];

        _previousClass = _currentClass;
        _currentClass = !cell.Input.IsLegal ? "mark__cell mark__cell--danger" : string.Empty;

        if (!string.Equals(_previousClass, _currentClass, StringComparison.Ordinal) )
        {
            StateHasChanged();
        }
    }
}
