@inject MarkInputProvider MarkInputProvider
@using UI.BlazorWASM.Converters
@using UI.BlazorWASM.Enums

<div class="mark__cell @GetCurrentClass()"></div>

@code {
    private Color _previousColor;
    private Color _currentColor => MarkInputProvider.GetColor(Pos);
    private bool _isDirty = false;

    private string GetCurrentClass()
    {
        return CellColorConverter.ToCssClass(_currentColor);
    }

    [Parameter]
    public Position Pos { get; set; }

    protected override void OnInitialized()
    {
        MarkInputProvider.OnChanged += () =>
        {
            _isDirty = true;
            StateHasChanged();
        };
    }

    protected override bool ShouldRender()
    {
        return _isDirty
            || _previousColor != _currentColor;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        _previousColor = _currentColor;
    }
}
