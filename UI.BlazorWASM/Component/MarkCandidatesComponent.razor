@inject ISudokuProvider SudokuProvider
@inject CandidatesMarkProvider CandidatesMarkProvider
@using UI.BlazorWASM.Converters
@using UI.BlazorWASM.Enums

<div class="mark__cell @_currentClass"></div>

@code {
    [Parameter]
    public int X { get; set; }

    [Parameter]
    public int Y { get; set; }

    [Parameter]
    public int Z { get; set; }

    private int _value => Z + 1;
    private ICell _cell => SudokuProvider.Cells[X, Y];

    private string _currentClass => CellColorConverter.ToCssClass(_currentColor);

    private Color _previousColor;
    private Color _currentColor
    {
        get
        {
            var isIllegal = _cell.Candidates.ContainsKey(_value) && !_cell.Candidates[_value].IsLegal;
            return isIllegal ? Color.Illegal : CandidatesMarkProvider.GetColor(X, Y, _value);
        }
    }

    protected override void OnInitialized()
    {
        SudokuProvider.OnCandidatesChanged += StateHasChanged;
        CandidatesMarkProvider.OnChanged += StateHasChanged;
    }

    protected override bool ShouldRender()
    {
        return _previousColor != _currentColor;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        _previousColor = _currentColor;
    }
}
